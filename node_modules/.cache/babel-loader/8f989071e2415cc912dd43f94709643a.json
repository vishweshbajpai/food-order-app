{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\vishw\\\\Udemy\\\\food-order-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{useRef,useState}from\"react\";import classes from\"./Checkout.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postalCode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setFormInputsValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var cityInputRef=useRef();var isEmpty=function isEmpty(value){return value.trim()===\"\";};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostalCode=postalCodeInputRef.current.value;var enteredCity=document.getElementById(\"city\").value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredCityIsValid=!isEmpty(enteredCity);var enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);setFormInputsValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postalCode:enteredPostalCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredCityIsValid&&enteredPostalCodeIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,city:enteredCity,postalCode:enteredPostalCode});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(!formInputsValidity.name&&classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(!formInputsValidity.street&&classes.invalid);var postalCodeControlClasses=\"\".concat(classes.control,\" \").concat(!formInputsValidity.postalCode&&classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(!formInputsValidity.city&&classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid Name.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid Street.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputsValidity.postalCode&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid Postal Code (5 characters).\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid City.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.hr}),/*#__PURE__*/_jsxs(\"div\",{className:classes.total,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount\"}),/*#__PURE__*/_jsx(\"span\",{children:props.totalAmount})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"sources":["C:/Users/vishw/Udemy/food-order-app/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","Checkout","props","name","street","city","postalCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","isEmpty","value","trim","isFiveChars","length","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","document","getElementById","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","form","hr","total","totalAmount","actions","onCancel","submit"],"mappings":"mIAAA,OAASA,MAAT,CAAiBC,QAAjB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,cAAoDH,QAAQ,CAAC,CAC3DI,IAAI,CAAE,IADqD,CAE3DC,MAAM,CAAE,IAFmD,CAG3DC,IAAI,CAAE,IAHqD,CAI3DC,UAAU,CAAE,IAJ+C,CAAD,CAA5D,wCAAOC,kBAAP,eAA2BC,qBAA3B,eAOA,GAAMC,CAAAA,YAAY,CAAGX,MAAM,EAA3B,CACA,GAAMY,CAAAA,cAAc,CAAGZ,MAAM,EAA7B,CACA,GAAMa,CAAAA,kBAAkB,CAAGb,MAAM,EAAjC,CACA,GAAMc,CAAAA,YAAY,CAAGd,MAAM,EAA3B,CAEA,GAAMe,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,KAAiB,EAA5B,EAAhB,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACF,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,GAAaE,MAAb,GAAwB,CAAnC,EAApB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChCA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,WAAW,CAAGZ,YAAY,CAACa,OAAb,CAAqBR,KAAzC,CACA,GAAMS,CAAAA,aAAa,CAAGb,cAAc,CAACY,OAAf,CAAuBR,KAA7C,CACA,GAAMU,CAAAA,iBAAiB,CAAGb,kBAAkB,CAACW,OAAnB,CAA2BR,KAArD,CACA,GAAMW,CAAAA,WAAW,CAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCb,KAApD,CAEA,GAAMc,CAAAA,kBAAkB,CAAG,CAACf,OAAO,CAACQ,WAAD,CAAnC,CACA,GAAMQ,CAAAA,oBAAoB,CAAG,CAAChB,OAAO,CAACU,aAAD,CAArC,CACA,GAAMO,CAAAA,kBAAkB,CAAG,CAACjB,OAAO,CAACY,WAAD,CAAnC,CACA,GAAMM,CAAAA,wBAAwB,CAAGf,WAAW,CAACQ,iBAAD,CAA5C,CAEAhB,qBAAqB,CAAC,CACpBL,IAAI,CAAEyB,kBADc,CAEpBxB,MAAM,CAAEyB,oBAFY,CAGpBxB,IAAI,CAAEyB,kBAHc,CAIpBxB,UAAU,CAAEyB,wBAJQ,CAAD,CAArB,CAOA,GAAMC,CAAAA,WAAW,CACfJ,kBAAkB,EAClBC,oBADA,EAEAC,kBAFA,EAGAC,wBAJF,CAME,GAAG,CAACC,WAAJ,CAAiB,CACf,OACD,CAED9B,KAAK,CAAC+B,SAAN,CAAgB,CACd9B,IAAI,CAAEkB,WADQ,CAEdjB,MAAM,CAAEmB,aAFM,CAGdlB,IAAI,CAAEoB,WAHQ,CAIdnB,UAAU,CAAEkB,iBAJE,CAAhB,EAMH,CApCD,CAsCA,GAAMU,CAAAA,kBAAkB,WAAMlC,OAAO,CAACmC,OAAd,aAAyB,CAAC5B,kBAAkB,CAACJ,IAApB,EAA4BH,OAAO,CAACoC,OAA7D,CAAxB,CACA,GAAMC,CAAAA,oBAAoB,WAAMrC,OAAO,CAACmC,OAAd,aAAyB,CAAC5B,kBAAkB,CAACH,MAApB,EAA8BJ,OAAO,CAACoC,OAA/D,CAA1B,CACA,GAAME,CAAAA,wBAAwB,WAAMtC,OAAO,CAACmC,OAAd,aAAyB,CAAC5B,kBAAkB,CAACD,UAApB,EAAkCN,OAAO,CAACoC,OAAnE,CAA9B,CACA,GAAMG,CAAAA,kBAAkB,WAAMvC,OAAO,CAACmC,OAAd,aAAyB,CAAC5B,kBAAkB,CAACF,IAApB,EAA4BL,OAAO,CAACoC,OAA7D,CAAxB,CAEA,mBACE,cAAM,SAAS,CAAEpC,OAAO,CAACwC,IAAzB,CAA+B,QAAQ,CAAEtB,cAAzC,wBACE,aAAK,SAAS,CAAEgB,kBAAhB,wBACE,cAAO,OAAO,CAAC,MAAf,uBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,MAAtB,CAA6B,GAAG,CAAEzB,YAAlC,EAFF,CAGG,CAACF,kBAAkB,CAACJ,IAApB,eAA4B,iDAH/B,GADF,cAME,aAAK,SAAS,CAAEkC,oBAAhB,wBACE,cAAO,OAAO,CAAC,QAAf,oBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAE3B,cAApC,EAFF,CAGG,CAACH,kBAAkB,CAACH,MAApB,eAA8B,mDAHjC,GANF,cAWE,aAAK,SAAS,CAAEkC,wBAAhB,wBACE,cAAO,OAAO,CAAC,QAAf,yBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,GAAG,CAAE3B,kBAApC,EAFF,CAGG,CAACJ,kBAAkB,CAACD,UAApB,eAAkC,uEAHrC,GAXF,cAgBE,aAAK,SAAS,CAAEiC,kBAAhB,wBACE,cAAO,OAAO,CAAC,MAAf,kBADF,cAEE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,MAAtB,CAA6B,GAAG,CAAE3B,YAAlC,EAFF,CAGG,CAACL,kBAAkB,CAACF,IAApB,eAA4B,iDAH/B,GAhBF,cAqBE,YAAK,SAAS,CAAEL,OAAO,CAACyC,EAAxB,EArBF,cAsBE,aAAK,SAAS,CAAEzC,OAAO,CAAC0C,KAAxB,wBACE,sCADF,cAEE,sBAAOxC,KAAK,CAACyC,WAAb,EAFF,GAtBF,cA0BE,aAAK,SAAS,CAAE3C,OAAO,CAAC4C,OAAxB,wBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE1C,KAAK,CAAC2C,QAArC,oBADF,cAIE,eAAQ,SAAS,CAAE7C,OAAO,CAAC8C,MAA3B,qBAJF,GA1BF,GADF,CAmCD,CA9FD,CAgGA,cAAe7C,CAAAA,QAAf","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const isEmpty = (value) => value.trim() === \"\";\r\n  const isFiveChars = (value) => value.trim().length === 5;\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = document.getElementById(\"city\").value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n      if(!formIsValid) {\r\n        return;\r\n      }\r\n\r\n      props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredStreet,\r\n        city: enteredCity,\r\n        postalCode: enteredPostalCode\r\n      });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${!formInputsValidity.name && classes.invalid}`;\r\n  const streetControlClasses = `${classes.control} ${!formInputsValidity.street && classes.invalid}`;\r\n  const postalCodeControlClasses = `${classes.control} ${!formInputsValidity.postalCode && classes.invalid}`;\r\n  const cityControlClasses = `${classes.control} ${!formInputsValidity.city && classes.invalid}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid Name.</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid Street.</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && <p>Please enter a valid Postal Code (5 characters).</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid City.</p>}\r\n      </div>\r\n      <div className={classes.hr}></div>\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{props.totalAmount}</span>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}