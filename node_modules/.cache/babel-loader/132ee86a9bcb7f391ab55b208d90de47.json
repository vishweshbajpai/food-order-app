{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\vishw\\\\Udemy\\\\food-order-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _toConsumableArray from\"C:\\\\Users\\\\vishw\\\\Udemy\\\\food-order-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _objectSpread from\"C:\\\\Users\\\\vishw\\\\Udemy\\\\food-order-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{useReducer}from\"react\";import CartContext from\"./cart-context\";import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type==='ADD'){var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItems;if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type==='REMOVE'){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var _existingCartItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-_existingCartItem.price;var _updatedItems;if(_existingCartItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},_existingCartItem),{},{amount:_existingCartItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}if(action.type==='CLEAR'){return defaultCartState;}return defaultCartState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:'ADD',item:item});};var removeItemFromCartHandler=function removeItemFromCartHandler(id){dispatchCartAction({type:'REMOVE',id:id});};var clearCartHandler=function clearCartHandler(){dispatchCartAction({type:'CLEAR'});};var cartContext=[{items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler,clearCart:clearCartHandler}];return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["C:/Users/vishw/Udemy/food-order-app/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        let updatedItems;\r\n\r\n        if(existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            }\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        else {\r\n            updatedItems = state.items.concat(action.item)\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n    if(action.type === 'REMOVE') {\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price;\r\n        let updatedItems;\r\n        if(existingCartItem.amount === 1) {\r\n            updatedItems = state.items.filter(item => item.id !== action.id);\r\n        }\r\n        else {\r\n            const updatedItem = {...existingCartItem, amount: existingCartItem.amount - 1 };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        }\r\n    }\r\n    if(action.type === 'CLEAR') {\r\n        return defaultCartState;\r\n    }\r\n\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    }\r\n    const removeItemFromCartHandler = id => {\r\n        dispatchCartAction({type: 'REMOVE', id: id})\r\n    }\r\n    const clearCartHandler = () => {\r\n        dispatchCartAction({type: 'CLEAR'});\r\n    }\r\n\r\n    const cartContext = [{\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n        clearCart: clearCartHandler\r\n    }]\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}